import java.nio.charset.StandardCharsets

plugins {
    id "java-library"
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "net.ltgt.errorprone" version "2.0.2"
    id "maven-publish"
}

group 'net.mindustry_ddns'
version '1.3.0'

ext.versions = [
        "gson" : "2.8.9",
        "owner": "1.0.12"
]

java {
    withSourcesJar()
    withJavadocJar()
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
}

repositories {
    mavenCentral()
}

dependencies {
    // Libraries
    api "wow"
    implementation "com.google.code.gson:gson:${versions.gson}"
    implementation "org.aeonbits.owner:owner-java8:${versions.owner}"

    // Annotations
    errorprone "com.google.errorprone:error_prone_core:2.11.0"
    errorproneJavac "com.google.errorprone:javac:9+181-r4173-1"
}

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
    options.encoding = StandardCharsets.UTF_8

    options.errorprone.with {
        disableWarningsInGeneratedCode = true
        disable "MissingSummary"
    }
}

// Ugly way to avoid publishing shadow artifacts to maven repos
// -> https://github.com/johnrengelman/shadow/issues/651
components.withType(AdhocComponentWithVariants).forEach { c ->
    c.withVariantsFromConfiguration(configurations.shadowRuntimeElements) { skip() }
}

publishing {
    publications {
        create("maven", MavenPublication) {
            from components.java

            pom {
                url = "https://github.com/mindustry-ddns-net/FileStore"

                organization {
                    name = "MDN"
                    url = "https://mindustry.ddns.net"
                }

                developers {
                    developer { id = "Phinner" }
                    developer { id = "Xasmedy" }
                }
            }
        }
    }

    repositories {
        maven {
            name = "xpdustry"
            url = "https://repo.xpdustry.fr/releases"

            credentials {
                username = System.getenv("XPDUSTRY_MAVEN_USERNAME") ?: ""
                password = System.getenv("XPDUSTRY_MAVEN_PASSWORD") ?: ""
            }
        }
    }
}
