import java.nio.charset.StandardCharsets

plugins {
    id "java-library"
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "net.ltgt.errorprone" version "2.0.2"
    id "maven-publish"
}

group 'net.mindustry_ddns'
version '1.1.0'

ext.versions = [
    "gson"      : "2.8.9",
    "owner"     : "1.0.12"
]

java{
    withSourcesJar()
    withJavadocJar()
}

javadoc{
    options.addStringOption('Xdoclint:none', '-quiet')
}

repositories {
    mavenCentral()
}

dependencies {
    // Libraries
    implementation "com.google.code.gson:gson:${versions.gson}"
    implementation "org.aeonbits.owner:owner-java8:${versions.owner}"

    // Annotations
    errorprone "com.google.errorprone:error_prone_core:2.10.0"
    errorproneJavac "com.google.errorprone:javac:9+181-r4173-1"
}

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
    options.encoding = StandardCharsets.UTF_8

    options.errorprone.with{
        disableWarningsInGeneratedCode = true
        disable "MissingSummary"
    }
}

// Ugly way to avoid publishing shadow artifacts to maven repos
// -> https://github.com/johnrengelman/shadow/issues/651
components.withType(AdhocComponentWithVariants).forEach{ c ->
    c.withVariantsFromConfiguration(configurations.shadowRuntimeElements){ skip() }
}

publishing{
    publications{
        create("maven", MavenPublication){
            from components.java

            pom{
                url = "https://github.com/mindustry-ddns-net/FileStore"

                developers{
                    developer{
                        id = "Phinner"
                        url = "https://www.xpdustry.fr"
                    }

                    developer{
                        id = "Xasmedy"
                        url = "https://mindustry.ddns.net"
                    }
                }
            }
        }
    }

    repositories{
        maven{
            name = "xpdustry"
            url = "https://repo.xpdustry.fr/releases"

            credentials{
                username = System.getenv("XPDUSTRY_MAVEN_USERNAME") ?: ""
                password = System.getenv("XPDUSTRY_MAVEN_PASSWORD") ?: ""
            }
        }
    }
}
